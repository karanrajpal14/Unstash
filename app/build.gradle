apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "rajpal.karan.unstash"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            useProguard false
            signingConfig signingConfigs.config
            zipAlignEnabled true
            debuggable true
            multiDexEnabled true
        }
        debug {
            minifyEnabled false
            useProguard false
            applicationIdSuffix ".debug"
            multiDexEnabled true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile project(':library')

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:preference-v14:$rootProject.supportLibraryVersion"

    compile "com.firebase:firebase-jobdispatcher:$rootProject.firebaseJobDispatcherVersion"
    compile "com.google.firebase:firebase-ads:$rootProject.googlePlayServicesVersion"
    compile "com.google.firebase:firebase-core:$rootProject.googlePlayServicesVersion"

    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxJavaAndroidVersion"

    compile "net.dean.jraw:JRAW:$rootProject.JRAWVersion"

    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
    compile "org.slf4j:slf4j-android:$rootProject.sl4jVersion"

    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    compile "com.github.zagum:Android-SwitchIcon:$rootProject.switchIconVersion"
    compile "com.github.bachors:Android-WordToSpan:$rootProject.wordToSpanVersion"
    compile "com.wdullaer:materialdatetimepicker:$rootProject.materialDatePickerVersion"

    testCompile "junit:junit:$rootProject.jUnitVersion"

}

apply plugin: 'com.google.gms.google-services'